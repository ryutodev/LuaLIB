-- illgui.space - ImGui-style library для Roblox
local IllGui = {}
IllGui.__index = IllGui

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- Цвета из скриншота
local Colors = {
    WindowBg = Color3.fromRGB(12, 12, 12),
    TitleBg = Color3.fromRGB(18, 18, 18),
    ChildBg = Color3.fromRGB(15, 15, 15),
    Border = Color3.fromRGB(35, 35, 35),
    FrameBg = Color3.fromRGB(20, 20, 20),
    FrameHovered = Color3.fromRGB(25, 25, 25),
    Text = Color3.fromRGB(200, 200, 200),
    TextDisabled = Color3.fromRGB(140, 140, 140),
    ButtonActive = Color3.fromRGB(90, 140, 255),
    CheckMark = Color3.fromRGB(255, 255, 255),
    SliderGrab = Color3.fromRGB(70, 110, 200),
    SliderGrabActive = Color3.fromRGB(90, 130, 220),
}

function IllGui.CreateContext()
    local ctx = {}
    ctx.Windows = {}
    ctx.CurrentWindow = nil
    ctx.ScreenGui = nil
    
    return ctx
end

function IllGui.Begin(ctx, title, size)
    if not ctx.ScreenGui then
        ctx.ScreenGui = Instance.new("ScreenGui")
        ctx.ScreenGui.Name = "IllGuiContext"
        ctx.ScreenGui.ResetOnSpawn = false
        ctx.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        ctx.ScreenGui.Parent = game.CoreGui
    end
    
    local window = ctx.Windows[title]
    
    if not window then
        -- Создаем окно
        local win = Instance.new("Frame")
        win.Name = title
        win.Size = size or UDim2.new(0, 600, 0, 400)
        win.Position = UDim2.new(0.5, -300, 0.5, -200)
        win.BackgroundColor3 = Colors.WindowBg
        win.BorderSizePixel = 0
        win.ClipsDescendants = false
        win.Parent = ctx.ScreenGui
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = Colors.Border
        stroke.Thickness = 1
        stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        stroke.Parent = win
        
        -- Title bar
        local titleBar = Instance.new("Frame")
        titleBar.Name = "TitleBar"
        titleBar.Size = UDim2.new(1, 0, 0, 30)
        titleBar.BackgroundColor3 = Colors.TitleBg
        titleBar.BorderSizePixel = 0
        titleBar.Parent = win
        
        local titleBorder = Instance.new("Frame")
        titleBorder.Size = UDim2.new(1, 0, 0, 1)
        titleBorder.Position = UDim2.new(0, 0, 1, 0)
        titleBorder.BackgroundColor3 = Colors.Border
        titleBorder.BorderSizePixel = 0
        titleBorder.Parent = titleBar
        
        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, -10, 1, 0)
        titleLabel.Position = UDim2.new(0, 10, 0, 0)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = title
        titleLabel.TextColor3 = Colors.ButtonActive
        titleLabel.Font = Enum.Font.Code
        titleLabel.TextSize = 13
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.Parent = titleBar
        
        -- Content area
        local content = Instance.new("Frame")
        content.Name = "Content"
        content.Size = UDim2.new(1, -20, 1, -40)
        content.Position = UDim2.new(0, 10, 0, 35)
        content.BackgroundTransparency = 1
        content.BorderSizePixel = 0
        content.Parent = win
        
        -- Layout
        local layout = Instance.new("UIListLayout")
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Padding = UDim.new(0, 5)
        layout.Parent = content
        
        -- Dragging
        local dragging = false
        local dragStart = nil
        local startPos = nil
        
        titleBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = win.Position
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                win.Position = UDim2.new(
                    startPos.X.Scale,
                    startPos.X.Offset + delta.X,
                    startPos.Y.Scale,
                    startPos.Y.Offset + delta.Y
                )
            end
        end)
        
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        
        window = {
            Frame = win,
            Content = content,
            Layout = layout,
            LayoutOrder = 0
        }
        
        ctx.Windows[title] = window
    end
    
    ctx.CurrentWindow = window
end

function IllGui.End(ctx)
    ctx.CurrentWindow = nil
end

-- Text
function IllGui.Text(ctx, text)
    local win = ctx.CurrentWindow
    if not win then return end
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 16)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Colors.Text
    label.Font = Enum.Font.Code
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.LayoutOrder = win.LayoutOrder
    label.Parent = win.Content
    
    win.LayoutOrder = win.LayoutOrder + 1
end

-- Separator
function IllGui.Separator(ctx)
    local win = ctx.CurrentWindow
    if not win then return end
    
    local sep = Instance.new("Frame")
    sep.Size = UDim2.new(1, 0, 0, 1)
    sep.BackgroundColor3 = Colors.Border
    sep.BorderSizePixel = 0
    sep.LayoutOrder = win.LayoutOrder
    sep.Parent = win.Content
    
    win.LayoutOrder = win.LayoutOrder + 1
end

-- Checkbox
function IllGui.Checkbox(ctx, label, value)
    local win = ctx.CurrentWindow
    if not win then return value end
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 20)
    frame.BackgroundTransparency = 1
    frame.LayoutOrder = win.LayoutOrder
    frame.Parent = win.Content
    
    local box = Instance.new("Frame")
    box.Size = UDim2.new(0, 12, 0, 12)
    box.Position = UDim2.new(0, 0, 0.5, -6)
    box.BackgroundColor3 = Colors.FrameBg
    box.BorderSizePixel = 0
    box.Parent = frame
    
    local boxStroke = Instance.new("UIStroke")
    boxStroke.Color = Colors.Border
    boxStroke.Thickness = 1
    boxStroke.Parent = box
    
    local check = Instance.new("TextLabel")
    check.Size = UDim2.new(1, 0, 1, 0)
    check.BackgroundTransparency = 1
    check.Text = value and "✓" or ""
    check.TextColor3 = Colors.CheckMark
    check.Font = Enum.Font.Code
    check.TextSize = 10
    check.Parent = box
    
    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(1, -18, 1, 0)
    text.Position = UDim2.new(0, 18, 0, 0)
    text.BackgroundTransparency = 1
    text.Text = label
    text.TextColor3 = Colors.TextDisabled
    text.Font = Enum.Font.Code
    text.TextSize = 12
    text.TextXAlignment = Enum.TextXAlignment.Left
    text.Parent = frame
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundTransparency = 1
    button.Text = ""
    button.Parent = frame
    
    button.MouseButton1Click:Connect(function()
        value = not value
        check.Text = value and "✓" or ""
    end)
    
    win.LayoutOrder = win.LayoutOrder + 1
    return value
end

-- Slider
function IllGui.SliderInt(ctx, label, value, min, max, format)
    local win = ctx.CurrentWindow
    if not win then return value end
    
    format = format or "%d"
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 45)
    frame.BackgroundTransparency = 1
    frame.LayoutOrder = win.LayoutOrder
    frame.Parent = win.Content
    
    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(1, 0, 0, 16)
    text.BackgroundTransparency = 1
    text.Text = label
    text.TextColor3 = Colors.TextDisabled
    text.Font = Enum.Font.Code
    text.TextSize = 12
    text.TextXAlignment = Enum.TextXAlignment.Left
    text.Parent = frame
    
    local track = Instance.new("Frame")
    track.Size = UDim2.new(1, 0, 0, 6)
    track.Position = UDim2.new(0, 0, 0, 20)
    track.BackgroundColor3 = Colors.FrameBg
    track.BorderSizePixel = 0
    track.Parent = frame
    
    local fill = Instance.new("Frame")
    fill.Size = UDim2.new((value - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Colors.SliderGrab
    fill.BorderSizePixel = 0
    fill.Parent = track
    
    local valueText = Instance.new("TextLabel")
    valueText.Size = UDim2.new(1, 0, 0, 14)
    valueText.Position = UDim2.new(0, 0, 0, 30)
    valueText.BackgroundTransparency = 1
    valueText.Text = string.format(format, value)
    valueText.TextColor3 = Colors.TextDisabled
    valueText.Font = Enum.Font.Code
    valueText.TextSize = 11
    valueText.TextXAlignment = Enum.TextXAlignment.Right
    valueText.Parent = frame
    
    local dragging = false
    
    local function update(input)
        local pos = math.clamp((input.Position.X - track.AbsolutePosition.X) / track.AbsoluteSize.X, 0, 1)
        value = math.floor(min + (max - min) * pos)
        fill.Size = UDim2.new(pos, 0, 1, 0)
        valueText.Text = string.format(format, value)
    end
    
    track.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            update(input)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            update(input)
        end
    end)
    
    win.LayoutOrder = win.LayoutOrder + 1
    return value
end

-- Button
function IllGui.Button(ctx, label, size)
    local win = ctx.CurrentWindow
    if not win then return false end
    
    size = size or UDim2.new(1, 0, 0, 24)
    
    local button = Instance.new("TextButton")
    button.Size = size
    button.BackgroundColor3 = Colors.FrameBg
    button.BorderSizePixel = 0
    button.Text = label
    button.TextColor3 = Colors.Text
    button.Font = Enum.Font.Code
    button.TextSize = 12
    button.AutoButtonColor = false
    button.LayoutOrder = win.LayoutOrder
    button.Parent = win.Content
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Colors.Border
    stroke.Thickness = 1
    stroke.Parent = button
    
    local clicked = false
    
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Colors.FrameHovered
    end)
    
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = Colors.FrameBg
    end)
    
    button.MouseButton1Down:Connect(function()
        button.BackgroundColor3 = Colors.ButtonActive
    end)
    
    button.MouseButton1Up:Connect(function()
        button.BackgroundColor3 = Colors.FrameHovered
    end)
    
    button.MouseButton1Click:Connect(function()
        clicked = true
    end)
    
    win.LayoutOrder = win.LayoutOrder + 1
    
    RunService.Heartbeat:Wait()
    local result = clicked
    clicked = false
    return result
end

-- Колонки
function IllGui.Columns(ctx, count)
    local win = ctx.CurrentWindow
    if not win then return end
    
    local columnsFrame = Instance.new("Frame")
    columnsFrame.Size = UDim2.new(1, 0, 0, 0)
    columnsFrame.BackgroundTransparency = 1
    columnsFrame.AutomaticSize = Enum.AutomaticSize.Y
    columnsFrame.LayoutOrder = win.LayoutOrder
    columnsFrame.Parent = win.Content
    
    local columns = {}
    local spacing = 10
    local totalSpacing = spacing * (count - 1)
    local columnWidth = (1 / count)
    
    for i = 1, count do
        local col = Instance.new("Frame")
        col.Size = UDim2.new(columnWidth, -totalSpacing / count, 1, 0)
        col.Position = UDim2.new((i - 1) * columnWidth, (i - 1) * spacing / count, 0, 0)
        col.BackgroundTransparency = 1
        col.Parent = columnsFrame
        
        local layout = Instance.new("UIListLayout")
        layout.Padding = UDim.new(0, 5)
        layout.Parent = col
        
        columns[i] = {Frame = col, Layout = layout, LayoutOrder = 0}
    end
    
    win.Columns = columns
    win.CurrentColumn = 1
    win.LayoutOrder = win.LayoutOrder + 1
end

function IllGui.NextColumn(ctx)
    local win = ctx.CurrentWindow
    if not win or not win.Columns then return end
    
    win.CurrentColumn = win.CurrentColumn + 1
    if win.CurrentColumn > #win.Columns then
        win.CurrentColumn = 1
    end
end

-- BeginChild для секций
function IllGui.BeginChild(ctx, name, size)
    local win = ctx.CurrentWindow
    if not win then return end
    
    local parent = win.Content
    if win.Columns and win.CurrentColumn then
        parent = win.Columns[win.CurrentColumn].Frame
    end
    
    local child = Instance.new("Frame")
    child.Name = name
    child.Size = size or UDim2.new(1, 0, 0, 200)
    child.BackgroundColor3 = Colors.ChildBg
    child.BorderSizePixel = 0
    child.AutomaticSize = Enum.AutomaticSize.Y
    child.LayoutOrder = win.LayoutOrder
    child.Parent = parent
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Colors.Border
    stroke.Thickness = 1
    stroke.Parent = child
    
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 8)
    padding.PaddingBottom = UDim.new(0, 8)
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.Parent = child
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)
    layout.Parent = child
    
    win.ChildStack = win.ChildStack or {}
    table.insert(win.ChildStack, win.Content)
    
    win.Content = child
    win.Layout = layout
    local oldOrder = win.LayoutOrder
    win.LayoutOrder = 0
    win.OldLayoutOrder = oldOrder
end

function IllGui.EndChild(ctx)
    local win = ctx.CurrentWindow
    if not win or not win.ChildStack or #win.ChildStack == 0 then return end
    
    win.Content = table.remove(win.ChildStack)
    win.LayoutOrder = (win.OldLayoutOrder or 0) + 1
end

return IllGui
