-- illgui.space UI Library for Roblox
-- Максимально точная копия дизайна с скриншота

local IllGui = {}
IllGui.__index = IllGui

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Утилиты для цветов и стилей
local Colors = {
    Background = Color3.fromRGB(10, 10, 10),
    SidebarBg = Color3.fromRGB(15, 15, 15),
    TabBg = Color3.fromRGB(20, 20, 20),
    Accent = Color3.fromRGB(100, 100, 255),
    Text = Color3.fromRGB(200, 200, 200),
    TextDim = Color3.fromRGB(120, 120, 120),
    Border = Color3.fromRGB(40, 40, 40),
    CheckboxBg = Color3.fromRGB(30, 30, 30),
    SliderBg = Color3.fromRGB(25, 25, 25),
    SliderFill = Color3.fromRGB(60, 60, 180),
}

-- Создание главного окна
function IllGui:CreateWindow(title)
    local window = {
        Tabs = {},
        CurrentTab = nil,
    }
    
    -- ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "IllGuiSpace"
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = game.CoreGui
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 700, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -350, 0.5, -250)
    mainFrame.BackgroundColor3 = Colors.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- Border
    local border = Instance.new("UIStroke")
    border.Color = Colors.Border
    border.Thickness = 1
    border.Parent = mainFrame
    
    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 35)
    titleBar.BackgroundColor3 = Colors.SidebarBg
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "illgui.space"
    titleLabel.TextColor3 = Colors.Accent
    titleLabel.TextSize = 14
    titleLabel.Font = Enum.Font.Code
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar
    
    -- Sidebar
    local sidebar = Instance.new("Frame")
    sidebar.Name = "Sidebar"
    sidebar.Size = UDim2.new(0, 120, 1, -35)
    sidebar.Position = UDim2.new(0, 0, 0, 35)
    sidebar.BackgroundColor3 = Colors.SidebarBg
    sidebar.BorderSizePixel = 0
    sidebar.Parent = mainFrame
    
    local sidebarBorder = Instance.new("Frame")
    sidebarBorder.Size = UDim2.new(0, 1, 1, 0)
    sidebarBorder.Position = UDim2.new(1, 0, 0, 0)
    sidebarBorder.BackgroundColor3 = Colors.Border
    sidebarBorder.BorderSizePixel = 0
    sidebarBorder.Parent = sidebar
    
    -- Tab Container
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(1, -121, 1, -35)
    tabContainer.Position = UDim2.new(0, 121, 0, 35)
    tabContainer.BackgroundColor3 = Colors.Background
    tabContainer.BorderSizePixel = 0
    tabContainer.Parent = mainFrame
    
    -- Drag functionality
    local dragging, dragInput, dragStart, startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
        if dragging and dragInput then
            update(dragInput)
        end
    end)
    
    window.ScreenGui = screenGui
    window.MainFrame = mainFrame
    window.Sidebar = sidebar
    window.TabContainer = tabContainer
    
    function window:CreateTab(tabName)
        local tab = {
            Sections = {},
            Elements = {},
        }
        
        -- Tab Button
        local tabButton = Instance.new("TextButton")
        tabButton.Name = tabName
        tabButton.Size = UDim2.new(1, 0, 0, 35)
        tabButton.Position = UDim2.new(0, 0, 0, (#self.Tabs * 35))
        tabButton.BackgroundColor3 = Colors.SidebarBg
        tabButton.BorderSizePixel = 0
        tabButton.Text = tabName
        tabButton.TextColor3 = Colors.Text
        tabButton.TextSize = 13
        tabButton.Font = Enum.Font.Code
        tabButton.Parent = sidebar
        
        -- Tab Content Frame
        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Name = tabName .. "Content"
        tabContent.Size = UDim2.new(1, 0, 1, 0)
        tabContent.BackgroundTransparency = 1
        tabContent.BorderSizePixel = 0
        tabContent.ScrollBarThickness = 4
        tabContent.ScrollBarImageColor3 = Colors.Border
        tabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        tabContent.Visible = false
        tabContent.Parent = tabContainer
        
        local contentLayout = Instance.new("UIListLayout")
        contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        contentLayout.Padding = UDim.new(0, 10)
        contentLayout.Parent = tabContent
        
        contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            tabContent.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 10)
        end)
        
        tabButton.MouseButton1Click:Connect(function()
            for _, t in pairs(self.Tabs) do
                t.Content.Visible = false
                t.Button.BackgroundColor3 = Colors.SidebarBg
            end
            tabContent.Visible = true
            tabButton.BackgroundColor3 = Colors.TabBg
            self.CurrentTab = tab
        end)
        
        if not self.CurrentTab then
            tabContent.Visible = true
            tabButton.BackgroundColor3 = Colors.TabBg
            self.CurrentTab = tab
        end
        
        tab.Button = tabButton
        tab.Content = tabContent
        table.insert(self.Tabs, tab)
        
        -- Section создание
        function tab:CreateSection(sectionName)
            local section = Instance.new("Frame")
            section.Name = sectionName
            section.Size = UDim2.new(1, -20, 0, 0)
            section.BackgroundColor3 = Colors.TabBg
            section.BorderSizePixel = 0
            section.AutomaticSize = Enum.AutomaticSize.Y
            section.Parent = tabContent
            
            local sectionBorder = Instance.new("UIStroke")
            sectionBorder.Color = Colors.Border
            sectionBorder.Thickness = 1
            sectionBorder.Parent = section
            
            local sectionLayout = Instance.new("UIListLayout")
            sectionLayout.SortOrder = Enum.SortOrder.LayoutOrder
            sectionLayout.Padding = UDim.new(0, 5)
            sectionLayout.Parent = section
            
            local padding = Instance.new("UIPadding")
            padding.PaddingTop = UDim.new(0, 10)
            padding.PaddingBottom = UDim.new(0, 10)
            padding.PaddingLeft = UDim.new(0, 10)
            padding.PaddingRight = UDim.new(0, 10)
            padding.Parent = section
            
            local sectionLabel = Instance.new("TextLabel")
            sectionLabel.Name = "SectionLabel"
            sectionLabel.Size = UDim2.new(1, 0, 0, 20)
            sectionLabel.BackgroundTransparency = 1
            sectionLabel.Text = sectionName
            sectionLabel.TextColor3 = Colors.Text
            sectionLabel.TextSize = 14
            sectionLabel.Font = Enum.Font.CodeBold
            sectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            sectionLabel.Parent = section
            
            local sectionObj = {Section = section}
            
            -- Toggle (Checkbox)
            function sectionObj:CreateToggle(name, default, callback)
                local toggleFrame = Instance.new("Frame")
                toggleFrame.Size = UDim2.new(1, 0, 0, 25)
                toggleFrame.BackgroundTransparency = 1
                toggleFrame.Parent = section
                
                local checkboxBg = Instance.new("Frame")
                checkboxBg.Size = UDim2.new(0, 12, 0, 12)
                checkboxBg.Position = UDim2.new(0, 0, 0.5, -6)
                checkboxBg.BackgroundColor3 = Colors.CheckboxBg
                checkboxBg.BorderSizePixel = 0
                checkboxBg.Parent = toggleFrame
                
                local checkboxBorder = Instance.new("UIStroke")
                checkboxBorder.Color = Colors.Border
                checkboxBorder.Thickness = 1
                checkboxBorder.Parent = checkboxBg
                
                local checkmark = Instance.new("TextLabel")
                checkmark.Size = UDim2.new(1, 0, 1, 0)
                checkmark.BackgroundTransparency = 1
                checkmark.Text = default and "✓" or ""
                checkmark.TextColor3 = Colors.Accent
                checkmark.TextSize = 10
                checkmark.Font = Enum.Font.CodeBold
                checkmark.Parent = checkboxBg
                
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(1, -20, 1, 0)
                label.Position = UDim2.new(0, 20, 0, 0)
                label.BackgroundTransparency = 1
                label.Text = name
                label.TextColor3 = Colors.Text
                label.TextSize = 12
                label.Font = Enum.Font.Code
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = toggleFrame
                
                local button = Instance.new("TextButton")
                button.Size = UDim2.new(1, 0, 1, 0)
                button.BackgroundTransparency = 1
                button.Text = ""
                button.Parent = toggleFrame
                
                local toggled = default or false
                
                button.MouseButton1Click:Connect(function()
                    toggled = not toggled
                    checkmark.Text = toggled and "✓" or ""
                    if callback then
                        callback(toggled)
                    end
                end)
                
                return toggleFrame
            end
            
            -- Slider
            function sectionObj:CreateSlider(name, min, max, default, suffix, callback)
                local sliderFrame = Instance.new("Frame")
                sliderFrame.Size = UDim2.new(1, 0, 0, 50)
                sliderFrame.BackgroundTransparency = 1
                sliderFrame.Parent = section
                
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(1, 0, 0, 18)
                label.BackgroundTransparency = 1
                label.Text = name
                label.TextColor3 = Colors.Text
                label.TextSize = 12
                label.Font = Enum.Font.Code
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = sliderFrame
                
                local sliderBg = Instance.new("Frame")
                sliderBg.Size = UDim2.new(1, 0, 0, 6)
                sliderBg.Position = UDim2.new(0, 0, 0, 25)
                sliderBg.BackgroundColor3 = Colors.SliderBg
                sliderBg.BorderSizePixel = 0
                sliderBg.Parent = sliderFrame
                
                local sliderFill = Instance.new("Frame")
                sliderFill.Size = UDim2.new(0, 0, 1, 0)
                sliderFill.BackgroundColor3 = Colors.SliderFill
                sliderFill.BorderSizePixel = 0
                sliderFill.Parent = sliderBg
                
                local valueLabel = Instance.new("TextLabel")
                valueLabel.Size = UDim2.new(1, 0, 0, 15)
                valueLabel.Position = UDim2.new(0, 0, 0, 35)
                valueLabel.BackgroundTransparency = 1
                valueLabel.Text = tostring(default) .. (suffix or "")
                valueLabel.TextColor3 = Colors.TextDim
                valueLabel.TextSize = 11
                valueLabel.Font = Enum.Font.Code
                valueLabel.TextXAlignment = Enum.TextXAlignment.Right
                valueLabel.Parent = sliderFrame
                
                local dragging = false
                local value = default or min
                
                local function updateSlider(input)
                    local pos = math.clamp((input.Position.X - sliderBg.AbsolutePosition.X) / sliderBg.AbsoluteSize.X, 0, 1)
                    value = math.floor(min + (max - min) * pos)
                    sliderFill.Size = UDim2.new(pos, 0, 1, 0)
                    valueLabel.Text = tostring(value) .. (suffix or "")
                    if callback then
                        callback(value)
                    end
                end
                
                sliderBg.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                        updateSlider(input)
                    end
                end)
                
                UserInputService.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
                
                UserInputService.InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        updateSlider(input)
                    end
                end)
                
                -- Set initial slider position
                local initialPos = (default - min) / (max - min)
                sliderFill.Size = UDim2.new(initialPos, 0, 1, 0)
                
                return sliderFrame
            end
            
            -- Keybind
            function sectionObj:CreateKeybind(name, default, callback)
                local keybindFrame = Instance.new("Frame")
                keybindFrame.Size = UDim2.new(1, 0, 0, 25)
                keybindFrame.BackgroundTransparency = 1
                keybindFrame.Parent = section
                
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(0.6, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.Text = name
                label.TextColor3 = Colors.Text
                label.TextSize = 12
                label.Font = Enum.Font.Code
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = keybindFrame
                
                local keyButton = Instance.new("TextButton")
                keyButton.Size = UDim2.new(0.35, 0, 0, 20)
                keyButton.Position = UDim2.new(0.65, 0, 0.5, -10)
                keyButton.BackgroundColor3 = Colors.CheckboxBg
                keyButton.BorderSizePixel = 0
                keyButton.Text = default or "..."
                keyButton.TextColor3 = Colors.TextDim
                keyButton.TextSize = 11
                keyButton.Font = Enum.Font.Code
                keyButton.Parent = keybindFrame
                
                local keyBorder = Instance.new("UIStroke")
                keyBorder.Color = Colors.Border
                keyBorder.Thickness = 1
                keyBorder.Parent = keyButton
                
                local binding = false
                local currentKey = default
                
                keyButton.MouseButton1Click:Connect(function()
                    binding = true
                    keyButton.Text = "..."
                end)
                
                UserInputService.InputBegan:Connect(function(input, gameProcessed)
                    if binding and input.UserInputType == Enum.UserInputType.Keyboard then
                        currentKey = input.KeyCode.Name
                        keyButton.Text = currentKey
                        binding = false
                        if callback then
                            callback(input.KeyCode)
                        end
                    end
                end)
                
                return keybindFrame
            end
            
            table.insert(self.Sections, sectionObj)
            return sectionObj
        end
        
        return tab
    end
    
    return window
end

return IllGui